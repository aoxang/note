#+TITLE: Understanding Linux network internals
#+DATE: <2017-05-27 Sat>
#+AUTHOR: ry
#+EMAIL: ry@rydeMacBook-Air.local
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t
#+CREATOR: Emacs 25.2.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export

1. rcu的介绍：
   Paul McKenney, Linux Journal

2. rx 网卡收到报文之后的处理：
   #+BEGIN_SRC c
    int netif_receive_skb(struct sk_buff *skb)
    {
    trace_netif_receive_skb_entry(skb);

    return netif_receive_skb_internal(skb);
    }
    EXPORT_SYMBOL(netif_receive_skb);

   #+END_SRC

3. 网络初始化的时候二层网上投递根据二层的protocol进行相对应的处理，比如ipv4的入口就是 =ip_rcv= 这个函数
   #+BEGIN_SRC c
   /* inet_init 函数中 */
   dev_add_pack(&ip_packet_type);
   #+END_SRC
   所以各种类型的注册可以跟着上面的注册函数去找即可。

4. 网桥的设置函数： br_dev_setup, 里面有函数指针各种ops（ethtool, net_dev_ops）的对接。

5. 网桥的删除： br_dev_delete，先删除port后清理fdb，最后停掉gc，删除/sys文件系统相关。

6. ip_rcv之后处理分本地投递和转发两个路径，对应函数为： ip_local_deliver ip_forward
