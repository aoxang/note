* http://observer.com/2017/05/apple-facebook-google-amazon-secrets-dream-job/
1. The interview process is designed to challenge you, and even the best candidates feel “stumped.” The question is this: What do you do next?
2. Life is a team sport.记得团队合作，记得聆听他人意见。

* smooth emacs: https://github.com/railwaycat/homebrew-emacsmacport https://news.ycombinator.com/item?id=12830206
  install emac for mac, Good point: instead of `brew install emacs-mac`, I should have written, `brew tap railwaycat/emacsmacport && brew install emacs-mac`.

  always been partial to "A Tale Of Five Editors" ~ http://www.catb.org/esr/writings/taoup/html/ch13s02.html
* https://jacquesmattheij.com/improving-a-legacy-codebase
  关于怎样去重构老代码，你进入一家公司面对的一坨屎的时候的处理方式。

  1. backup 把所有能想到的备份都做好。
  2. 线上版本分支记好，并且自己能够编译出来这个版本。简而言之就是先跟线上对标。
  3. DB先不要动，等到逻辑都理清楚了最后动。
  4. 多写测试用例，这个平时一直在做
  5. 不要试图去写一个第二版。

* https://eater.net/
  手工打造一个CPU!

* http://www.daedtech.com/how-to-keep-your-best-programmers
  离职原因，恩，死海效应之前也听说过

* https://12factor.net/
  定义一些规范，开发部署等

* http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang/
  golang的workqueue模型

* TODO http://goyalankit.com/blog/linux-bridge
  里面正好也参考了正在看的书Understanding Linux Network

* TODO http://rabbitstack.github.io/operating%20systems/linux-containers-internals-part-i/
  Container Internal

* https://news.ycombinator.com/item?id=14486657
  推荐书的帖子,比如：
  + Working Effectively with Legacy Code by Michael Feathers
  + The Effective Engineer
  + The Design of Design: Essays from a Computer Scientist" by Frederick P. Brooks
  + Advanced Programming in the Unix Environment by Stevens
  + Operating Systems: Design and Implementation by Tanenbaum
  + The Art of Unix Programming by ESR
  + Parsing Techniques by Grune and Jacobs
  + Applied Cryptography by Schneier
* https://www.destroyallsoftware.com/compendium/network-protocols?share_key=97d3ba4c24d21147
  网络
* https://news.ycombinator.com/item?id=14508063
  做好离职:
    1. Focus on transition asap. Give the leaving employee plenty of time to document knowledge.
    2. Make sure to treat all parties involved with respect.
    3. Have an exit interview with the founder where you can give final feedback (with the understanding that it may be ignored).
    4. Treat everyone like you might work with them again.
